import{createRequire as q}from"module";import y from"path";import V from"fs-extra";import U from"yaml";import K from"yargs";function k(e){let r=String(e).trim();if(typeof e=="number")return{isValid:!0,value:{kind:"NumberValue",value:e}};let n=w(r);if(n.isValid)return n;let t=x(r);if(t.isValid)return t;let o=v(r);if(o.isValid)return o;let s=R(r);if(s.isValid)return s;let i=N(r);if(i.isValid)return i;let a=C(r);if(a.isValid)return a;let l=z(r);return l.isValid?l:{isValid:!0,value:{kind:"StringValue",value:r}}}function f(e){switch(e.kind){case"HexColor":return e.value;case"RgbColor":return`rgb(${e.r}, ${e.g}, ${e.b})`;case"RgbaColor":return`rgba(${e.r}, ${e.g}, ${e.b}, ${e.a})`;case"TokenRef":return`$${e.collection}.${e.token}`;case"SizeValue":return`${e.value}${e.unit}`;case"DurationValue":return`${e.value}${e.unit}`;case"NumberValue":return e.value.toString();case"StringValue":return e.value;case"ShadowLayer":let r=f(e.offsetX),n=f(e.offsetY),t=f(e.blur),o=f(e.spread),s=f(e.color);return`${r} ${n} ${t} ${o} ${s}`;case"Shadow":return e.layers.map(i=>f(i)).join(", ");default:return String(e)}}function w(e){return/^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/.test(e)?{isValid:!0,value:{kind:"HexColor",value:e}}:{isValid:!1,error:`Invalid hex color: ${e}`}}function x(e){let r=/^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/,n=e.match(r);if(!n)return{isValid:!1,error:`Invalid rgb color: ${e}`};let[,t,o,s]=n,i=parseInt(t,10),a=parseInt(o,10),l=parseInt(s,10);return i<0||i>255||a<0||a>255||l<0||l>255?{isValid:!1,error:`Invalid RGB values: ${e}`}:{isValid:!0,value:{kind:"RgbColor",r:i,g:a,b:l}}}function v(e){let r=/^rgba\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*([01]?\.?\d*)\s*\)$/,n=e.match(r);if(!n)return{isValid:!1,error:`Invalid rgba color: ${e}`};let[,t,o,s,i]=n,a=parseInt(t,10),l=parseInt(o,10),c=parseInt(s,10),u=parseFloat(i);return a<0||a>255||l<0||l>255||c<0||c>255?{isValid:!1,error:`Invalid RGB values: ${e}`}:u<0||u>1?{isValid:!1,error:`Invalid alpha value: ${e}`}:{isValid:!0,value:{kind:"RgbaColor",r:a,g:l,b:c,a:u}}}function R(e){if(!/^\$[a-zA-Z0-9][a-zA-Z0-9_-]*(?:\.[a-zA-Z0-9][a-zA-Z0-9_-]*)+$/.test(e))return{isValid:!1,error:`Invalid token reference: ${e}`};let t=e.substring(1).split(".");if(t.length<2)return{isValid:!1,error:`Invalid token format: ${e}`};let o=t[t.length-1];return{isValid:!0,value:{kind:"TokenRef",collection:t.slice(0,-1).join("."),token:o}}}function C(e){let r=/^([+-]?\d*\.?\d+)(px|rem|em|vw|vh|%)$/,n=e.match(r);if(!n)return{isValid:!1,error:`Invalid size: ${e}`};let[,t,o]=n,s=parseFloat(t);return isNaN(s)?{isValid:!1,error:`Invalid size value: ${e}`}:{isValid:!0,value:{kind:"SizeValue",value:s,unit:o}}}function z(e){let r=/^([+-]?\d*\.?\d+)(ms|s)$/,n=e.match(r);if(!n)return{isValid:!1,error:`Invalid duration: ${e}`};let[,t,o]=n,s=parseFloat(t);return isNaN(s)?{isValid:!1,error:`Invalid duration value: ${e}`}:{isValid:!0,value:{kind:"DurationValue",value:s,unit:o}}}function L(e){if(!e)return{isValid:!1,error:"Missing color value"};if(e.startsWith("$"))return R(e);if(e.startsWith("var("))return{isValid:!0,value:{kind:"StringValue",value:e}};let r=w(e);if(r.isValid)return r;let n=x(e);if(n.isValid)return n;let t=v(e);return t.isValid?t:{isValid:!1,error:`Invalid color: ${e}`}}function N(e){if(!e.includes("px")&&!e.includes("$"))return{isValid:!1,error:`Invalid shadow format: ${e}`};try{let r=e.split(",").map(t=>t.trim()),n=[];for(let t of r){let o=O(t);if(!o.isValid||!o.value)return{isValid:!1,error:`Invalid shadow layer: ${t}`};n.push(o.value)}return{isValid:!0,value:{kind:"Shadow",layers:n}}}catch{return{isValid:!1,error:`Invalid shadow format: ${e}`}}}function O(e){let r=e.trim().split(/\s+/);if(r.length<4)return{isValid:!1,error:`Invalid shadow layer format: ${e}`};try{let n=h(r[0]),t=h(r[1]),o=h(r[2]),s=h(r[3]);if(!n.isValid||!t.isValid||!o.isValid||!s.isValid)return{isValid:!1,error:`Invalid shadow dimensions: ${e}`};let i=r.slice(4).join(" ").trim(),a=L(i);return a.isValid?{isValid:!0,value:{kind:"ShadowLayer",color:a.value,offsetX:n.value,offsetY:t.value,blur:o.value,spread:s.value}}:{isValid:!1,error:`Invalid shadow color: ${i}`}}catch{return{isValid:!1,error:`Invalid shadow layer: ${e}`}}}function h(e){return e.startsWith("$")?R(e):C(e)}function $(e,r){return{tokens:j(e),collections:F(r)}}function F(e){return e.data.map(r=>({name:r.name,modes:r.modes}))}function M(e){let{collection:r,tokens:n}=e.data;return Object.entries(n).map(([t,o])=>{let s=Object.entries(o.values).map(([i,a])=>({mode:i,value:a}));return{token:{name:t,collection:r},values:s}})}function j(e){return e.flatMap(M)}function _(e){return k(e)}function Y(e){let r=[];return e.forEach(n=>{n.values.forEach(t=>{let o=_(t.value);r.push({tokenName:n.token.name,collection:n.token.collection,mode:t.mode,value:t.value,result:o})})}),r}function p(e){let r=[];return e.kind==="TokenRef"?r.push({collection:e.collection,token:e.token}):e.kind==="ShadowLayer"?(r.push(...p(e.color)),r.push(...p(e.offsetX)),r.push(...p(e.offsetY)),r.push(...p(e.blur)),r.push(...p(e.spread))):e.kind==="Shadow"&&e.layers.forEach(n=>{r.push(...p(n))}),r}function G(e,r){let n=[],t=[],o=e.data.collection,s=r.get(o);return s?(Object.entries(e.data.tokens).forEach(([i,a])=>{let l=Object.keys(a.values),c=s.modes.filter(u=>!l.includes(u));c.length>0&&n.push({type:"MISSING_MODE",message:`Token '${i}' is missing modes: ${c.join(", ")}`,tokenName:i,collection:o}),Object.entries(a.values).forEach(([u,d])=>{let g=k(d);g.isValid||n.push({type:"INVALID_VALUE_FORMAT",message:g.error||`Invalid value format for token '${i}' in mode '${u}'`,tokenName:i,collection:o,mode:u,value:d})})}),{isValid:n.length===0,errors:n,warnings:t}):(n.push({type:"INVALID_COLLECTION",message:`Collection '${o}' is not defined`,collection:o}),{isValid:!1,errors:n,warnings:t})}function X(e,r){let n=[],t=[];return Y(e).forEach(({tokenName:s,collection:i,mode:a,value:l,result:c})=>{if(!c.isValid){n.push({type:"INVALID_VALUE_FORMAT",message:c.error||"Invalid value format",tokenName:s,collection:i,mode:a,value:l});return}c.value&&p(c.value).forEach(({collection:d,token:g})=>{let S=`$${d}.${g}`;r.find(P=>P.token.name===S)||n.push({type:"INVALID_PRIMITIVE_TOKEN",message:`Referenced token '${S}' not found`,tokenName:s,collection:i,mode:a,value:l})})}),{isValid:n.length===0,errors:n,warnings:t}}function I(e,r){let n=[],t=[];e.forEach(a=>{let l=G(a,r);n.push(...l.errors),t.push(...l.warnings)});let o={kind:"TokenCollections",metadata:{id:"temp",name:"temp"},data:Array.from(r.values())},s=$(e,o),i=X(s.tokens,s.tokens);return n.push(...i.errors),t.push(...i.warnings),{isValid:n.length===0,errors:n,warnings:t}}function b(e,r,n){return{resolve(t){return m(t,e,r,n)},resolveTokenRef(t){let o=`$${t.collection}.${t.token}`;if(!e.find(a=>a.token.name===o))throw new Error(`Token not found: ${o}`);return`var(${n(o)})`}}}function m(e,r,n,t){switch(e.kind){case"TokenRef":let o=`$${e.collection}.${e.token}`;if(!r.find(a=>a.token.name===o))throw new Error(`Token not found: ${o}`);return{kind:"StringValue",value:`var(${t(o)})`};case"ShadowLayer":return{kind:"ShadowLayer",color:m(e.color,r,n,t),offsetX:m(e.offsetX,r,n,t),offsetY:m(e.offsetY,r,n,t),blur:m(e.blur,r,n,t),spread:m(e.spread,r,n,t)};case"Shadow":return{kind:"Shadow",layers:e.layers.map(a=>m(a,r,n,t))};default:return e}}function T(e,r){let n=e.replace(/^\$/,"").replace(/\./g,"-");return r?`--${r}-${n}`:`--${n}`}function A(e){return typeof e=="string"?e:typeof e=="number"?e.toString():f(e)}function B(e,r,n){let t=String(e);if(!t.startsWith("$")){let i=k(t);if(i.isValid&&i.value){let l=b(r,"default",c=>T(c,n)).resolve(i.value);return A(l)}return e}let o=k(t);if(!o.isValid||!o.value)throw new Error(`Invalid token reference: ${t}`);return b(r,"default",i=>T(i,n)).resolveTokenRef(o.value)}function H(e,r,n,t){let o=e.values.find(a=>a.mode===r);if(!o)throw new Error(`No value found for token '${e.token.name}' in mode '${r}'`);let s=B(o.value,n,t);return`${T(e.token.name,t)}: ${A(s)};`}function W(e,r,n,t,o){let s=r.map(i=>`  ${H(i,n,t,o)}`).join(`
`);return`${e} {
${s}
}`}function D(e,r){let{prefix:n,banner:t="",selectors:o}=r,{tokens:s,collections:i}=e,a=i.flatMap(l=>{let c=s.filter(u=>u.token.collection===l.name);return l.modes.map(u=>{var g;let d=(g=o[l.name])==null?void 0:g[u];if(!d)throw new Error(`Selector for collection ${l.name} and mode ${u} is not defined`);return W(d,c,u,s,n)})}).join(`

`);return`${t}${a}`}function Z(e,r,n){let t=new Map(r.data.map(i=>[i.name,i])),o=I(e,t);if(!o.isValid)throw console.error("Token validation failed:"),o.errors.forEach(i=>{console.error(`  ${i.message}`)}),new Error("Token validation failed. Please fix the errors above.");o.warnings.length>0&&(console.warn("Token validation warnings:"),o.warnings.forEach(i=>{console.warn(`  ${i}`)}));let s=$(e,r);return D(s,n)}var E={generateCssVariables:Z,generateCssVarsFromAst:D,createCssVarName:T};var J=q(import.meta.url),Q=J.resolve("@cocso-ui/baseframe-sources"),ee=y.dirname(Q);function re(){process.stdout.write(`
\u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557
\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255D\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255D\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255D\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255D
\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255D\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255D\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557  
\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u255A\u2550\u2550\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255D  \u2588\u2588\u2554\u2550\u2550\u255D  \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255A\u2588\u2588\u2554\u255D\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255D  
\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255D\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551     \u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551 \u255A\u2550\u255D \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557
\u255A\u2550\u2550\u2550\u2550\u2550\u255D \u255A\u2550\u255D  \u255A\u2550\u255D\u255A\u2550\u2550\u2550\u2550\u2550\u2550\u255D\u255A\u2550\u2550\u2550\u2550\u2550\u2550\u255D\u255A\u2550\u255D     \u255A\u2550\u255D  \u255A\u2550\u255D\u255A\u2550\u255D  \u255A\u2550\u255D\u255A\u2550\u255D     \u255A\u2550\u255D\u255A\u2550\u2550\u2550\u2550\u2550\u2550\u255D

`)}function ne(e){let r=[];function n(t){let o=V.readdirSync(t);for(let s of o){let i=y.join(t,s),a=V.statSync(i);a.isDirectory()?n(i):a.isFile()&&/\.ya?ml$/.test(s)&&r.push(i)}}return n(e),r}function te(){let e=ne(ee),r=[],n=null;for(let t of e)try{let o=V.readFileSync(t,"utf-8"),s=U.parse(o);s.kind==="Tokens"?r.push(s):s.kind==="TokenCollections"&&(n=s)}catch(o){console.warn(` \u274E failed to parse ${t}:`,o)}return{tokens:r,collections:n}}function oe(e,r){let{tokens:n,collections:t}=te();t||(console.error(" \u274E collections.yaml not found"),process.exit(1));let o=E.generateCssVariables(n,t,{prefix:r,banner:`/* Generated CSS Variables for Baseframe Design Tokens */
/* Generated at: ${new Date().toISOString()} */

`,selectors:{global:{default:":root"}}});V.ensureDirSync(e);let s=y.join(e,"tokens.css");V.writeFileSync(s,o,"utf-8"),console.log(` \u2705 Generated CSS variables: ${s}`)}K(process.argv.slice(2)).command("css-vars [dir] [prefix]","Generate CSS variables",e=>e.positional("dir",{describe:"Output directory",type:"string",default:"./dist/"}).option("prefix",{describe:"CSS variable prefix",type:"string"}),e=>{re(),oe(e.dir,e.prefix)}).demandCommand(1,"You need to specify a command.").showHelpOnFail(!0).help().argv;
