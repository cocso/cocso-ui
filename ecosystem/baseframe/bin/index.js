import{createRequire as B}from"module";import h from"path";import g from"fs-extra";import Z from"yaml";import Y from"yargs";function p(e){let n=String(e).trim();if(typeof e=="number")return{isValid:!0,value:{kind:"NumberValue",value:e}};let r=x(n);if(r.isValid)return r;let o=w(n);if(o.isValid)return o;let t=y(n);if(t.isValid)return t;let s=I(n);if(s.isValid)return s;let i=A(n);if(i.isValid)return i;let a=D(n);return a.isValid?a:{isValid:!0,value:{kind:"StringValue",value:n}}}function x(e){return/^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/.test(e)?{isValid:!0,value:{kind:"HexColor",value:e}}:{isValid:!1,error:`Invalid hex color: ${e}`}}function w(e){let n=/^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/,r=e.match(n);if(!r)return{isValid:!1,error:`Invalid rgb color: ${e}`};let[,o,t,s]=r,i=parseInt(o,10),a=parseInt(t,10),l=parseInt(s,10);return i<0||i>255||a<0||a>255||l<0||l>255?{isValid:!1,error:`Invalid RGB values: ${e}`}:{isValid:!0,value:{kind:"RgbColor",r:i,g:a,b:l}}}function y(e){let n=/^rgba\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*([01]?\.?\d*)\s*\)$/,r=e.match(n);if(!r)return{isValid:!1,error:`Invalid rgba color: ${e}`};let[,o,t,s,i]=r,a=parseInt(o,10),l=parseInt(t,10),c=parseInt(s,10),u=parseFloat(i);return a<0||a>255||l<0||l>255||c<0||c>255?{isValid:!1,error:`Invalid RGB values: ${e}`}:u<0||u>1?{isValid:!1,error:`Invalid alpha value: ${e}`}:{isValid:!0,value:{kind:"RgbaColor",r:a,g:l,b:c,a:u}}}function I(e){if(!/^\$[a-zA-Z0-9][a-zA-Z0-9_-]*(?:\.[a-zA-Z0-9][a-zA-Z0-9_-]*)+$/.test(e))return{isValid:!1,error:`Invalid token reference: ${e}`};let o=e.substring(1).split(".");if(o.length<2)return{isValid:!1,error:`Invalid token format: ${e}`};let t=o[o.length-1];return{isValid:!0,value:{kind:"TokenRef",collection:o.slice(0,-1).join("."),token:t}}}function A(e){let n=/^([+-]?\d*\.?\d+)(px|rem|em|vw|vh|%)$/,r=e.match(n);if(!r)return{isValid:!1,error:`Invalid size: ${e}`};let[,o,t]=r,s=parseFloat(o);return isNaN(s)?{isValid:!1,error:`Invalid size value: ${e}`}:{isValid:!0,value:{kind:"SizeValue",value:s,unit:t}}}function D(e){let n=/^([+-]?\d*\.?\d+)(ms|s)$/,r=e.match(n);if(!r)return{isValid:!1,error:`Invalid duration: ${e}`};let[,o,t]=r,s=parseFloat(o);return isNaN(s)?{isValid:!1,error:`Invalid duration value: ${e}`}:{isValid:!0,value:{kind:"DurationValue",value:s,unit:t}}}function T(e){switch(e.kind){case"HexColor":return e.value;case"RgbColor":return`rgb(${e.r}, ${e.g}, ${e.b})`;case"RgbaColor":return`rgba(${e.r}, ${e.g}, ${e.b}, ${e.a})`;case"TokenRef":return`$${e.collection}.${e.token}`;case"SizeValue":return`${e.value}${e.unit}`;case"DurationValue":return`${e.value}${e.unit}`;case"NumberValue":return e.value.toString();case"StringValue":return e.value;default:return String(e)}}function S(e){return e.data.map(n=>({name:n.name,modes:n.modes}))}function E(e){let{collection:n,tokens:r}=e.data;return Object.entries(r).map(([o,t])=>{let s=Object.entries(t.values).map(([i,a])=>({mode:i,value:a}));return{token:{name:o,collection:n},values:s}})}function P(e){return e.flatMap(E)}function k(e,n){return{tokens:P(e),collections:S(n)}}function N(e){return p(e)}function F(e){let n=[];return e.forEach(r=>{r.values.forEach(o=>{let t=N(o.value);n.push({tokenName:r.token.name,collection:r.token.collection,mode:o.mode,value:o.value,result:t})})}),n}function V(e){return e.kind==="TokenRef"}function $(e){return e.kind==="TokenRef"?{collection:e.collection,token:e.token}:null}function O(e,n){let r=[],o=[],t=e.data.collection,s=n.get(t);if(!s)return r.push({type:"INVALID_COLLECTION",message:`Collection '${t}' is not defined in collections.yaml`,collection:t}),{isValid:!1,errors:r,warnings:o};let i=new Set(s.modes);return Object.entries(e.data.tokens).forEach(([a,l])=>{let c=Object.keys(l.values),u=Array.from(i).filter(d=>!c.includes(d));u.length>0&&r.push({type:"MISSING_MODE",message:`Collection '${t}' token '${a}' must have values for all modes: ${u.join(", ")}`,tokenName:a,collection:t,mode:u.join(", ")});let f=c.filter(d=>d!=="default"&&!i.has(d));f.length>0&&o.push(`Token '${a}' has values for undefined modes: ${f.join(", ")}`)}),{isValid:r.length===0,errors:r,warnings:o}}function j(e,n){let r=[],o=[];return F(e).forEach(({tokenName:s,collection:i,mode:a,value:l,result:c})=>{if(c.isValid||r.push({type:"INVALID_VALUE_FORMAT",message:c.error||`Invalid value format for token '${s}'`,tokenName:s,collection:i,mode:a,value:l}),c.value&&V(c.value)){let u=$(c.value);if(u){let f=`$${u.collection}.${u.token}`;n.find(m=>m.token.name===f)||r.push({type:"INVALID_PRIMITIVE_TOKEN",message:`Token reference '${l}' in token '${s}' references a non-existent token`,tokenName:s,collection:i,mode:a,value:l})}}}),{isValid:r.length===0,errors:r,warnings:o}}function C(e,n){let r=[],o=[];e.forEach(a=>{let l=O(a,n);r.push(...l.errors),o.push(...l.warnings)});let t={kind:"TokenCollections",metadata:{id:"temp",name:"temp"},data:Array.from(n.values())},s=k(e,t),i=j(s.tokens,s.tokens);return r.push(...i.errors),o.push(...i.warnings),{isValid:r.length===0,errors:r,warnings:o}}function b(e,n){let r=e.replace(/^\$/,"").replace(/\./g,"-");return n?`--${n}-${r}`:`--${r}`}function M(e){return typeof e=="string"?e:typeof e=="number"?e.toString():T(e)}function z(e,n,r,o){let t=String(e);if(!t.startsWith("$"))return e;let s=p(t);if(!s.isValid||!s.value||!V(s.value))throw new Error(`Invalid token reference: ${t}`);let i=$(s.value);if(!i)throw new Error(`Could not parse token reference: ${t}`);let a=`$${i.collection}.${i.token}`;if(!n.find(u=>u.token.name===a))throw new Error(`Token not found: ${t}`);return`var(${b(a,o)})`}function _(e,n,r,o){let t=e.values.find(a=>a.mode===n);if(!t)throw new Error(`No value found for token '${e.token.name}' in mode '${n}'`);let s=o?z(t.value,o,n,r):t.value;return`${b(e.token.name,r)}: ${M(s)};`}function G(e,n,r,o,t){let s=n.map(i=>`  ${_(i,r,o,t)}`).join(`
`);return`${e} {
${s}
}`}function L(e){return e.map(({selector:n,tokens:r,mode:o,prefix:t,allTokens:s})=>G(n,r,o,t,s)).join(`

`)}function v(e,n){let{prefix:r,banner:o="",selectors:t}=n,{tokens:s,collections:i}=e,a=i.flatMap(c=>{let u=s.filter(f=>f.token.collection===c.name);return c.modes.map(f=>{var m;let d=(m=t[c.name])==null?void 0:m[f];if(!d)throw new Error(`Selector for collection ${c.name} and mode ${f} is not defined`);return{selector:d,tokens:u,mode:f,prefix:r,allTokens:s}})}),l=L(a);return`${o}${l}`}function H(e,n,r){let o=new Map(n.data.map(i=>[i.name,i])),t=C(e,o);if(!t.isValid)throw console.error("Token validation failed:"),t.errors.forEach(i=>{console.error(`  ${i.message}`)}),new Error("Token validation failed. Please fix the errors above.");t.warnings.length>0&&(console.warn("Token validation warnings:"),t.warnings.forEach(i=>{console.warn(`  ${i}`)}));let s=k(e,n);return v(s,r)}var R={generateCssVariables:H,generateCssVarsFromAst:v,createCssVarName:b};var q=B(import.meta.url),K=q.resolve("@cocso-ui/baseframe-sources"),U=h.dirname(K);function W(){process.stdout.write(`
\u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557
\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255D\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255D\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255D\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255D
\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255D\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255D\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557  
\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u255A\u2550\u2550\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255D  \u2588\u2588\u2554\u2550\u2550\u255D  \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255A\u2588\u2588\u2554\u255D\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255D  
\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255D\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551     \u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551 \u255A\u2550\u255D \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557
\u255A\u2550\u2550\u2550\u2550\u2550\u255D \u255A\u2550\u255D  \u255A\u2550\u255D\u255A\u2550\u2550\u2550\u2550\u2550\u2550\u255D\u255A\u2550\u2550\u2550\u2550\u2550\u2550\u255D\u255A\u2550\u255D     \u255A\u2550\u255D  \u255A\u2550\u255D\u255A\u2550\u255D  \u255A\u2550\u255D\u255A\u2550\u255D     \u255A\u2550\u255D\u255A\u2550\u2550\u2550\u2550\u2550\u2550\u255D

`)}function J(e){let n=[];function r(o){let t=g.readdirSync(o);for(let s of t){let i=h.join(o,s),a=g.statSync(i);a.isDirectory()?r(i):a.isFile()&&/\.ya?ml$/.test(s)&&n.push(i)}}return r(e),n}async function Q(){let e=J(U),n=[],r=null;for(let o of e)try{let t=g.readFileSync(o,"utf-8"),s=Z.parse(t);s.kind==="Tokens"?n.push(s):s.kind==="TokenCollections"&&(r=s)}catch(t){console.warn(` \u274E failed to parse ${o}:`,t)}return{tokens:n,collections:r}}async function X(e,n){let{tokens:r,collections:o}=await Q();o||(console.error(" \u274E collections.yaml not found"),process.exit(1));let t=R.generateCssVariables(r,o,{prefix:n,banner:`/* Generated CSS Variables for Baseframe Design Tokens */
/* Generated at: ${new Date().toISOString()} */

`,selectors:{global:{default:":root"}}});await g.ensureDir(e);let s=h.join(e,"tokens.css");await g.writeFile(s,t,"utf-8"),console.log(` \u2705 Generated CSS variables: ${s}`)}Y(process.argv.slice(2)).command("css-vars [dir] [prefix]","Generate CSS variables",e=>e.positional("dir",{describe:"Output directory",type:"string",default:"./dist/"}).option("prefix",{describe:"CSS variable prefix",type:"string"}),async e=>{W(),await X(e.dir,e.prefix)}).demandCommand(1,"You need to specify a command.").showHelpOnFail(!0).help().argv;
